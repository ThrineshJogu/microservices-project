EKS INSTALLTION:

Install AWS-CLI LATEST VERSION

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install


Install KUBECTL:
curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.34.1/2025-09-19/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin



Install EKSCTL:
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin
eksctl version

================================================================================================================================

EKS CLUSTER CREATION

CREATE CLUSTER:
eksctl create cluster --name=EKS-1 --region=eu-north-1 --zones=eu-north-1a,eu-north-1b --without-nodegroup


ATTACH IAM ROLE:

eksctl utils associate-iam-oidc-provider --region eu-north-1 --cluster EKS-1 --approve

CREATE NODEGROUP:

eksctl create nodegroup --cluster=EKS-1 --region=eu-north-1 --name=myworkernodes --node-type=c7i-flex.large --nodes=3 --nodes-min=2 --nodes-max=4 --node-volume-size=20 --ssh-access --ssh-public-key=newkey --managed --asg-access --external-dns-access --full-ecr-access --appmesh-access --alb-ingress-access

UPDATE CLUSTER:

aws eks update-kubeconfig --name EKS-1 --region eu-north-1

this command is to select the cluster from group of clusters and also for update cluster

install docker and jenkins

chmod 777 /var/run/docker.sock


DELETE CLUSTER : 
 
eksctl delete cluster --name EKS-1 --region eu-north-1

install jenkins with scripts
yum install docker -y && systemctl start docker
chmod 777 /var/run/docker.sock

==============================================================================================================================================================

vi service-account.yml
---
apiVersion: v1
kind: ServiceAccount
metadata:
 name: jenkins
 namespace: webapps

 kubectl create -f service-account.yml -n webapps
==============================================================================================================================================================
 vi role.yml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: app-role
  namespace: webapps
rules:
  - apiGroups:
      - ""
      - apps
      - autoscaling
      - batch
      - extensions
      - policy
      - rbac.authorization.k8s.io
    resources:
      - pods
      - componentstatuses
      - configmaps
      - daemonsets
      - deployments
      - events
      - endpoints
      - horizontalpodautoscalers
      - ingresses
      - jobs
      - limitranges
      - namespaces
      - nodes
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - replicasets
      - replicationcontrollers
      - serviceaccounts
      - services
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

kubectl create -f role.yml -n webapps
=========================================================================================================================================
vi role-binding.yml

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-rolebinding
  namespace: webapps
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: app-role
subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: webapps

kubectl create -f role-binding.yml -n webapps
================================================================================================================================
generate secret.
vi secret.yml

---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: mysecretname
  namespace: webapps
  annotations:
    kubernetes.io/service-account.name: jenkins

kubectl create -f secret.yml -n webapps

# to get secret token

kubectl describe secret mysecret -n webapps


delete cluster:

eksctl delete cluster --name EKS-1 --region eu-north-1
